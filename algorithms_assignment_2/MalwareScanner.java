import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Writer;
import java.util.Map;
import java.util.Scanner;

/**
 * This class accomplishes Mission Firewall
 */
public class MalwareScanner {

    private final Map<String, Malware> malwareDB;

    public MalwareScanner(Map<String, Malware> malwareDB) {
        this.malwareDB = malwareDB;
    }

    /**
     * TODO: Open and read the input file while searching for threats
     * TODO: Write results to both; a new file name "scanLog.txt" and to the console
     *
     * @param filename the input file
     * @throws IOException the io exception
     */
    public void scanFile(String filename) throws IOException {
        System.out.println("Started scanning...\n" +
                "--------------------------------------------------------------------------------");
        File scanLog = new File("scanLog.txt");
        File file = new File(filename);
        Scanner scanner = new Scanner(file);
        FileWriter writer = new FileWriter(scanLog);
        int number =0 ;
        int threats = 0;
        while(scanner.hasNextLine()){
            number+=1;
            String hash = turbo64(scanner.nextLine());
            if(malwareDB.containsKey(hash)){
                threats+=1;
                Malware corona = malwareDB.get(hash);
                writer.write(hash+"@"+number+"\n");
                System.out.println("Detected malware!\n"+"Name: "+corona.getTitle()+
                        "\nThreat Level: "+corona.getLevel()+"\nHash:"+corona.getHash()+
                        "\n--------------------------------------------------------------------------------");
            }
        }
        System.out.println("Scan complete! "+threats+" threats are found and eliminated. Generating log file...");
        writer.flush();
    }

    public static String turbo64(String in) {
        // Implement turbo64 algorithm given by the assignment instructions
        long turbo = 4294967291L;
        long a = 0;
        long b = 1;
        for (char c: in.toCharArray()) {
            a = (a+c) % turbo;
            b = (a+b)%turbo;
        }
        return Long.toHexString((b << 32) | a);
    }
}
